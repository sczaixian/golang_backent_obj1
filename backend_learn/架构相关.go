



达到 QPS > 10000 的核心思想是：

分层解耦、水平扩展、缓存为王、异步化、全链路监控。



用户请求 -> [CDN] -> [LVS/NLB] -> [Nginx/API Gateway集群] -> [应用服务集群]
                                                         |
                                                         v
                                              [分布式缓存集群 (Redis)]
                                                         |
                                                         v
                                              [消息队列集群 (Kafka)]
                                                         |
                                                         v
                                    [读写分离 + 分库分表的数据库集群]


lvs :  通过控制 ip 实现负载均衡； 关键是使用 ipvs 机制
ipvs技术关键：
	1. vs/nat ：  所有请求和相应都要过 lvs 服务器，他会对ip进行虚拟映射；缺点访问量大时压力大
	2. vs/tun ：  从新封装ip层，响应直接返回，支持跨网络
	3. vs/dr  ：  lvs只修改 目的MAC地址 前提条件 1. lvs 和 业务server 必须在同一个二层网络（如同一个vlan）2. 业务server 必须配置 VIP 在 lo 接口
						lo 接口是本地回环，不会对外广播 ARP，所以不会导致 ARP 冲突











https://www.cnblogs.com/crazymakercircle/p/17607164.html
《价值10W架构师知识图谱》

UV : 一天内独立访问数
MAU : 月活
DAU ： 日活  1000w
PV ： 日访问量 约 10000w (1亿)
qps： 按二八定律来看，如果每天 80% 的访问集中在 20% 的时间里，这 20% 时间就叫做峰值时间。
( 10000 0000 * 0.8 ) / (86400 * 0.2 ) = 4587 (QPS)



最佳线程数量=（（线程等待时间+线程cpu时间）/线程cpu时间）* cpu数量


单节点QPS公式：QPS=1000ms/RT
假设一个节点RT（请求时间）是10ms,则可以很容易的计算出QPS,QPS = 1000/10 = 100


并发数（并发度）：指系统同时能处理的请求数量，同样反应了系统的负载能力。
并发数： 系统同时处理的request/事务数
并发数 = QPS*平均响应时间


系统的吞吐量（承压能力）与request对CPU的消耗、外部接口、IO等等紧密关联。
单个request 对CPU消耗越高，IO速度越慢，那么，系统吞吐能力越低，反之越高。
系统吞吐量几个重要参数：QPS（TPS）、并发数、响应时间。

QPS（TPS）：（Query Per Second）每秒钟request/事务 数量

并发数： 系统同时处理的request/事务数

响应时间： 一般取平均响应时间  （通过 NGINX 或 web server得到）

理解了上面三个要素的意义之后，就能推算出它们之间的关系：
QPS（TPS）= 并发数/平均响应时间
并发数 = QPS*平均响应时间


